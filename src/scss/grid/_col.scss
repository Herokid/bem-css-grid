@use 'sass:math';
@use 'variables' as *;

.g-col {
    @supports (display: flex) {
        flex-preferred-size: 0;
        flex-basis: 0;
        -webkit-box-flex: 1;
        flex-positive: 1;
        flex-grow: 1;
        max-width: 100%;
        padding-right: math.div($grid-gutter, 2);
        padding-left: math.div($grid-gutter, 2);
        min-width: math.div(100%, $grid-columns);

        @each $gutter in $grid-gutter-modifiers {
            $modifier: nth($gutter, 1);
            $multiplier: nth($gutter, 2);

            .g-wrap--#{$modifier} &,
            .g-row--#{$modifier} & {
                padding-right: math.div($grid-gutter, 2) * $multiplier;
                padding-left: math.div($grid-gutter, 2) * $multiplier;
            }
        }
        
    }
}

[class*="g-col--"] {
    width: 100%;
    min-height: 1px;
    padding-right: math.div($grid-gutter, 2);
    padding-left: math.div($grid-gutter, 2);

    @supports not (display: flex) {
        float: left;
    }

    @each $gutter in $grid-gutter-modifiers {
        $modifier: nth($gutter, 1);
        $multiplier: nth($gutter, 2);

        .g-wrap--#{$modifier} &,
        .g-row--#{$modifier} & {
            padding-right: math.div($grid-gutter, 2) * $multiplier;
            padding-left: math.div($grid-gutter, 2) * $multiplier;
        }
    }
}

@each $breakpoint in $grid-breakpoints {
    $key: nth($breakpoint, 1);
    $val: nth($breakpoint, 2);

    @media (min-width: #{$val}) {
        // [class*="g-col--#{$key}-"] {
        //     display: block;
        // }
        .g-col--#{$key} {
            &--no-gutter {
                padding-right: 0;
                padding-left: 0;
            }
            &--gutter {
                padding-right: math.div($grid-gutter, 2);
                padding-left: math.div($grid-gutter, 2);

                @each $gutter in $grid-gutter-modifiers {
                    $modifier: nth($gutter, 1);
                    $multiplier: nth($gutter, 2);

                    .g-wrap--#{$modifier} &,
                    .g-row--#{$modifier} & {
                        padding-right: math.div($grid-gutter, 2) * $multiplier;
                        padding-left: math.div($grid-gutter, 2) * $multiplier;
                    }
                }
            }
            &-left {
                float: left;
            }
            &-right {
                float: right;
            }
            &-push-0 {
                left: auto;
            }
            &-offset-0 {
                margin-left: 0;
            }

            @for $i from 1 through $grid-columns {
                &-#{$i} {
                    @supports not (display: flex) {
                        width: math.div($i * 100%, $grid-columns);
                    }
                    @supports (display: flex) {
                        -webkit-box-flex: 0;
                        flex: 0 0 math.div($i * 100%, $grid-columns);
                        max-width: math.div($i * 100%, $grid-columns);
                    }
                }

                &-push-#{$i} {
                    left: math.div($i * 100%, $grid-columns);
                }

                &-offset-#{$i} {
                    margin-left: math.div($i * 100%, $grid-columns);
                }
            }
        }
    }
}
